#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-build: &superset-build
  build:
    context: .
  image: feluelle/superset
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker-init.sh:/app/docker-init.sh
  - ./pythonpath_dev:/app/pythonpath
  - superset_home:/app/superset_home

version: "3.7"
services:
  redis:
    image: redis:3.2
    container_name: pi_superset_cache
    restart: unless-stopped
    ports:
      - "127.0.0.1:46379:6379"
    volumes:
      - redis:/data

  db:
    env_file: .env
    image: postgres:10
    container_name: pi_superset_db
    restart: unless-stopped
    ports:
      - "127.0.0.1:45433:5432"
    volumes:
      - db_home:/var/lib/postgresql/data

  superset:
    env_file: .env
    <<: *superset-build
    container_name: pi_superset_app
    command: ["flask", "run", "-p", "8088", "--with-threads", "--reload", "--debugger", "--host=0.0.0.0"]
    restart: unless-stopped
    ports:
      - 48088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    <<: *superset-build
    container_name: pi_superset_init
    command: ["/app/docker-init.sh"]
    env_file: .env
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-worker:
    <<: *superset-build
    container_name: pi_superset_worker
    command: ["celery", "worker", "--app=superset.tasks.celery_app:app", "-Ofair", "-l", "INFO"]
    env_file: .env
    restart: unless-stopped
    depends_on: *superset-depends-on
    volumes: *superset-volumes

volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
